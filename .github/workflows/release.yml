name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'

      - name: Derive metadata
        id: meta
        run: |
          echo "version=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
          echo "date=$(date -u +%Y-%m-%d)" >> $GITHUB_OUTPUT

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          VERSION: ${{ steps.meta.outputs.version }}
          DATE: ${{ steps.meta.outputs.date }}
          COMMIT: ${{ github.sha }}
        run: |
          ext=""
          if [ "$GOOS" = "windows" ]; then ext=".exe"; fi
          bin="circe_${VERSION}_${GOOS}_${GOARCH}${ext}"
          mkdir -p dist
          go mod download
          go build -o "dist/${bin}" -ldflags "-X 'circe/internal/command.Version=${VERSION}' -X 'circe/internal/command.Commit=${COMMIT::7}' -X 'circe/internal/command.Date=${DATE}'" ./cmd/main
          echo "Built dist/${bin}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: circe-binaries-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/*
          if-no-files-found: error

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: circe-binaries-*
          path: dist-download
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist-download/**
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
